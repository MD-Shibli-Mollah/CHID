* @ValidationCode : MjotMTczMjg0MjEyMTpDcDEyNTI6MTUzNDI0OTYxNjY5NjphYmluZXNoLnM6LTE6LTE6MDowOmZhbHNlOk4vQTpSMTdfU1AxMS4wOi0xOi0x
* @ValidationInfo : Timestamp         : 14 Aug 2018 18:56:56
* @ValidationInfo : Encoding          : Cp1252
* @ValidationInfo : User Name         : abinesh.s
* @ValidationInfo : Nb tests success  : N/A
* @ValidationInfo : Nb tests failure  : N/A
* @ValidationInfo : Rating            : N/A
* @ValidationInfo : Coverage          : N/A
* @ValidationInfo : Strict flag       : N/A
* @ValidationInfo : Bypass GateKeeper : false
* @ValidationInfo : Compiler Version  : R17_SP11.0
*-----------------------------------------------------------------------------
* <Rating>5301</Rating>
*-----------------------------------------------------------------------------
*-----------------------------------------------------------------------------
SUBROUTINE MCB.DFE.INTRF.002.CONV.CSV(Y.ARR)
*-----------------------
*------------------------------------------------------------------------
*------------------------------------------------------------------------
* Company Name        :
* Developer Name      : Madan,Vinay
* Subroutine Type     : POST Routine
* Attached as         :
* Incoming Parameters : Y.ARR
* Outgoing Parameters : Y.ARR
* Development Date    : 02-01-2018
*-------------------------------------------------------------------------
* Description         : Coversion routine
*-------------------------------------------------------------------------
* Modification History:-
*------------------------
* Date              Who                    Reference                 Descr
*-------------------------------------------------------------------------
*18-01-2018        KALMANI                cosolidate with loan report
*-------------------------------------------------------------------------
    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_ENQUIRY.COMMON
    $INSERT I_F.AA.ARRANGEMENT
    $INSERT I_AA.APP.COMMON
    $INSERT I_F.AA.LIMIT
    $INSERT I_F.LIMIT
    $INSERT I_F.AA.PRODUCT
    $INSERT I_F.AA.ACCOUNT
    $INSERT I_F.AA.ACCOUNT.DETAILS
    $INSERT I_F.CUSTOMER
    $INSERT I_F.AA.CUSTOMER
    $INSERT I_F.ACCOUNT
    $INSERT I_F.AA.INTEREST
    $INSERT I_F.AA.INTEREST.ACCRUALS
    $INSERT I_F.AA.SETTLEMENT
*$INSERT I_F.MOB.AA.AR.UNUT.OD.INT.ACR
    $INSERT I_F.DATES
    $INSERT I_F.CATEGORY
    $INSERT I_F.COLLATERAL
    $INSERT I_F.AA.TERM.AMOUNT
    $INSERT I_F.EB.CONTRACT.BALANCES

    GOSUB OPEN.FILES

    Y.ACCT.TYPE = Y.ARR[1,2]
    BEGIN CASE

        CASE Y.ACCT.TYPE NE "AA"

            GOSUB PROCESS.NOSTRO.VOSTRO
        CASE Y.ACCT.TYPE EQ "AA"
            GOSUB PROCESS

    END CASE

    IF Y.LINKED.APPL.ID EQ '' THEN  Y.LINKED.APPL.ID = SPACE(12)
    IF Y.ALT.ID EQ '' THEN  Y.ALT.ID = SPACE(12)
    IF CUST1 EQ '' THEN  CUST1 = SPACE(12)
    IF CUST2 EQ '' THEN  CUST2 = SPACE(12)
    IF CUST3 EQ '' THEN  CUST3 = SPACE(12)
    IF CUST4 EQ '' THEN  CUST4 = SPACE(12)
    IF Y.COMPANY.CODE EQ '' THEN  Y.COMPANY.CODE = SPACE(12)
    IF Y.ORG.DATE EQ '' THEN  Y.ORG.DATE = SPACE(12)
    IF Y.CURRENCY EQ '' THEN  Y.CURRENCY = SPACE(12)
    IF Y.COMPANY.CODE EQ '' THEN  Y.COMPANY.CODE = SPACE(12)
    IF Y.AA.PRODUCT.GRP EQ '' THEN  Y.AA.PRODUCT.GRP = SPACE(12)
    IF Y.AA.PRODUCT EQ '' THEN  Y.AA.PRODUCT = SPACE(12)
    IF Y.AA.PRODUCT.LINE EQ '' THEN  Y.AA.PRODUCT.LINE = SPACE(12)
    IF Y.CATEGORY EQ '' THEN  Y.CATEGORY = SPACE(12)
    IF Y.LAST.DATE EQ '' THEN  Y.LAST.DATE = SPACE(12)
    IF Y.PAYMENT.DATE EQ '' THEN Y.PAYMENT.DATE = SPACE(12)
    IF Y.MATURITY.DATE EQ '' THEN  Y.MATURITY.DATE = SPACE(12)
    IF AC.CR.INT.RATE EQ '' THEN  AC.CR.INT.RATE = SPACE(12)
    IF AC.DR.INT.RATE EQ '' THEN  AC.DR.INT.RATE = SPACE(12)
    IF D.DEP.INT.RATE EQ '' THEN  D.DEP.INT.RATE = SPACE(12)
    IF L.PR.INT.RATE EQ '' THEN  L.PR.INT.RATE = SPACE(12)
    IF L.PEN.INT.RATE EQ '' THEN L.PEN.INT.RATE = SPACE(12)
    IF INT.LIM.AMT EQ '' THEN  INT.LIM.AMT = SPACE(12)
    IF Y.WORKING.BAL EQ '' THEN Y.WORKING.BAL = SPACE(12)
    IF Y.UNUTIL.LIMIT.BAL EQ '' THEN  Y.UNUTIL.LIMIT.BAL = SPACE(12)
    IF Y.UNUT.LIM.INTEREST EQ '' THEN Y.UNUT.LIM.INTEREST = SPACE(12)
    IF Y.AA.PAYOUT.ACCT EQ '' THEN  Y.AA.PAYOUT.ACCT = SPACE(12)
    IF Y.AA.PRODUCT.LINE EQ '' THEN Y.AA.PRODUCT.LINE = SPACE(12)
    IF Y.ARR.ID EQ '' THEN Y.ARR.ID = SPACE(12)
    IF Y.START.DATE EQ '' THEN  Y.START.DATE = SPACE(12)
    IF Y.TOTCOMMIT.AMT EQ '' THEN  Y.TOTCOMMIT.AMT = SPACE(12)
    IF Y.COMPANY.CODE EQ '' THEN  Y.COMPANY.CODE = SPACE(12)
    IF Y.LOAN.CURR.BAL EQ '' THEN  Y.LOAN.CURR.BAL = SPACE(12)
    IF Y.SUS.DATE EQ '' THEN  Y.SUS.DATE = SPACE(12)
    IF Y.OUTSTANDING.OVRDUE.AMT EQ '' THEN  Y.OUTSTANDING.OVRDUE.AMT = SPACE(12)
    IF Y.LOAN.CURR.BAL EQ '' THEN Y.LOAN.CURR.BAL = SPACE(12)
    IF Y.BALANCE.ARRAY EQ '' THEN Y.BALANCE.ARRAY = SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12):';':SPACE(12)
    IF Y.INS.START.DATE EQ '' THEN Y.INS.START.DATE = SPACE(12)
    IF Y.INSURANCE EQ '' THEN Y.INSURANCE = SPACE(12)
    IF Y.INS.EXP.DATE EQ '' THEN Y.INS.EXP.DATE = SPACE(12)

    Y.TODAY = Y.LAST.WRK.DATE.1
    Y.TODAY = OCONV(ICONV(Y.TODAY,'D'),'D-E')
        
    
    Y.DATA.ARR = ''
    Y.DATA.ARR = Y.ARR.ID:';':Y.CURRENCY:';':CUST1:';':Y.LINKED.APPL.ID:';':Y.SHORT.NAME:';':Y.CUSTOMER.ADDRESS:';':CUST2:';':CUST3:';':CUST4:';':Y.WORKING.BAL:';':Y.ALT.ID:';':Y.ORG.DATE:';'

    Y.DATA.ARR :=Y.LAST.DATE:';':Y.PAYMENT.DATE:';':AC.CR.INT.RATE:';':AC.DR.INT.RATE:';':D.DEP.INT.RATE:';':L.PR.INT.RATE:';':L.PEN.INT.RATE:';':Y.BALANCE.ARRAY:';'

    Y.DATA.ARR :=Y.AA.PAYOUT.ACCT:';':Y.ARR.ID:';':Y.MATURITY.DATE:';':Y.UNUTIL.LIMIT.BAL:';':INT.LIM.AMT:';':Y.CATEGORY:';':CATEG.DES:';':Y.AA.PRODUCT.LINE:';':Y.AA.PRODUCT:';':Y.COMPANY.CODE:';':Y.TODAY:';'

    Y.DATA.ARR :=Y.START.DATE:';':Y.LOAN.CURR.BAL:';':Y.ACCRUED.INT:';':Y.OUTSTANDING.OVRDUE.AMT:';':Y.SUS.DATE:';':Y.TOTCOMMIT.AMT:';':Y.REVOLVING:';'

    Y.DATA.ARR :=Y.LOAN.COMMIT.AMT:';':Y.LOAN.COMMIT.STATUS:';':LIM.EXP.DATE:';':Y.REDUCING.LIMIT:';':Y.LAST.WRK.DATE:';':Y.INSURANCE:';':Y.INS.START.DATE:';':Y.INS.EXP.DATE:';':Y.EXCESS.AMY
    
    CHANGE ',' TO '_' IN Y.DATA.ARR
    CHANGE '--' TO '' IN Y.DATA.ARR
    CHANGE VM TO '|' IN Y.DATA.ARR
    Y.ARR = Y.DATA.ARR

RETURN

*-------------------------------------------------------------------------
OPEN.FILES:
*-------------------------------------------------------------------------

    FN.ARR = 'F.AA.ARRANGEMENT'
    F.ARR = ''
    CALL OPF(FN.ARR,F.ARR)

    FN.LIMIT = 'F.LIMIT'
    F.LIMIT = ''
    CALL OPF(FN.LIMIT,F.LIMIT)
    FN.LIMIT.HIS='F.LIMIT$HIS'
    F.LIMIT.HIS=''
    CALL OPF(FN.LIMIT.HIS,F.LIMIT.HIS)


    FN.AA.ACCOUNT.DETAILS = 'F.AA.ACCOUNT.DETAILS'
    F.AA.ACCOUNT.DETAILS = ''
    CALL OPF(FN.AA.ACCOUNT.DETAILS,F.AA.ACCOUNT.DETAILS)


    FN.AA.ARR.ACCOUNT = 'F.AA.ARR.ACCOUNT'
    F.AA.ARR.ACCOUNT = ''
    CALL OPF(FN.AA.ARR.ACCOUNT,F.AA.ARR.ACCOUNT)

    FN.AA.ACCOUNT = 'F.AA.ACCOUNT'
    F.AA.ACCOUNT = ''
    CALL OPF(FN.AA.ACCOUNT,F.AA.ACCOUNT)

    FN.CUSTOMER = 'F.CUSTOMER'
    F.CUSTOMER = ''
    CALL OPF(FN.CUSTOMER,F.CUSTOMER)

    FN.ACCOUNT = 'F.ACCOUNT'
    F.ACCOUNT = ''
    CALL OPF(FN.ACCOUNT,F.ACCOUNT)

*    FN.MOB.AA.AR.UNUT.OD.INT.ACR = 'F.MOB.AA.AR.UNUT.OD.INT.ACR'
 *   F.MOB.AA.AR.UNUT.OD.INT.ACR = ''
  *  CALL OPF(FN.MOB.AA.AR.UNUT.OD.INT.ACR,F.MOB.AA.AR.UNUT.OD.INT.ACR)

    FN.DATES = 'F.DATES'
    F.DATES = ''
    CALL OPF(FN.DATES,F.DATES)

    FN.CATEGORY = 'F.CATEGORY'
    F.CATEGORY = ''
    CALL OPF(FN.CATEGORY,F.CATEGORY)
   
    FN.COLLATERAL = 'F.COLLATERAL'
    F.COLLATERAL = ''
    CALL OPF(FN.COLLATERAL,F.COLLATERAL)
   
    FN.AA.ARR.TERM.AMT = 'F.AA.ARR.TERM.AMOUNT'
    F.AA.ARR.TERM.AMT = ''
    CALL OPF(FN.AA.ARR.TERM.AMT,F.AA.ARR.TERM.AMT)

    FN.EB.CONTRACT.BALANCES = 'F.EB.CONTRACT.BALANCES'
    F.EB.CONTRACT.BALANCES = ''
    CALL OPF(FN.EB.CONTRACT.BALANCES,F.EB.CONTRACT.BALANCES)

    Y.LAST.WRK.DATE.1=''
    Y.APP = 'COLLATERAL'
    Y.FLD = 'INS.COVERAGE':VM:'L.INS.STRT.DT':VM:'INS.EXPIRY.DT'
    Y.POS = ''
    CALL MULTI.GET.LOC.REF(Y.APP,Y.FLD,Y.POS)
    Y.INS.COV.POS = Y.POS<1,1>
    Y.INS.ST.POS = Y.POS<1,2>
    Y.INS.EXP.POS = Y.POS<1,3>
   CALL F.READ(FN.DATES,ID.COMPANY,R.DATES,F.DATES,ERR.DATES)
    Y.LAST.WRK.DATE.1 = R.DATES<EB.DAT.LAST.WORKING.DAY>
RETURN

PROCESS.NOSTRO.VOSTRO:
    Y.ACCT.ID = ''
    Y.ACCT.ID = Y.ARR
    CALL F.READ(FN.ACCOUNT,Y.ACCT.ID,R.ACCT,F.ACCOUNT,ACC.ERR)
    IF NOT(ACC.ERR) THEN
        Y.ARRANGEMENT =  R.ACCT<AC.ARRANGEMENT.ID>
        IF Y.ARRANGEMENT NE '' THEN
            RETURN
        END
        Y.CURRENCY =  R.ACCT<AC.CURRENCY>
        Y.COMPANY.CODE = R.ACCT<AC.CO.CODE>
        CUST1 = R.ACCT<AC.CUSTOMER>
        CALL F.READ(FN.CUSTOMER,CUST1,R.CUSTOMER,F.CUSTOMER,CUS.ERROR)
        Y.STREET = R.CUSTOMER<EB.CUS.STREET>

        Y.SHORT.NAME = R.CUSTOMER<EB.CUS.SHORT.NAME>
        Y.SHORT.NAME=CHANGE(Y.SHORT.NAME,';',' ')
        Y.SHORT.NAME=CHANGE(Y.SHORT.NAME,',',' ')

        Y.ADDRESS = R.CUSTOMER<EB.CUS.ADDRESS>
        Y.TOWN = R.CUSTOMER<EB.CUS.TOWN.COUNTRY>
        Y.POST.CODE = R.CUSTOMER<EB.CUS.POST.CODE>
        Y.COUNTRY = R.CUSTOMER<EB.CUS.COUNTRY>
        
        Y.CUSTOMER.ADDRESS = Y.STREET:' ':Y.ADDRESS:' ':Y.TOWN:' ':Y.POST.CODE:' ':Y.COUNTRY
        Y.CUSTOMER.ADDRESS=CHANGE(Y.CUSTOMER.ADDRESS,';',' ')
        Y.CUSTOMER.ADDRESS=CHANGE(Y.CUSTOMER.ADDRESS,',',' ')
        
        Y.AA.PRODUCT.LINE = "ACCOUNTS"

        Y.CATEGORY = R.ACCT<AC.CATEGORY>
        CALL F.READ(FN.CATEGORY,Y.CATEGORY,R.CATEGORY,F.CATEGORY,ERROR.CATEG)
        IF NOT(ERROR.CATEG) THEN
            CATEG.DES = R.CATEGORY<EB.CAT.DESCRIPTION>
            CATEG.DES=CHANGE(CATEG.DES,';',' ')
            CATEG.DES=CHANGE(CATEG.DES,',',' ')

        END
        Y.ORG.DATE = R.ACCT<AC.OPENING.DATE>
        Y.ORG.DATE = OCONV(ICONV(Y.ORG.DATE,'D'),'D-E')
       
    
*CALL F.READ(FN.EB.CONTRACT.BALANCES,Y.ACCT.ID,R.EB.CONTRACT.BALANCES,F.EB.CONTRACT.BALANCES,EB.CONTRACT.BALANCES.ERR)
*     Y.WORKING.BALANCE = R.EB.CONTRACT.BALANCES<ECB.WORKING.BALANCE>
     
   
        ACCT.ID = Y.ACCT.ID
        BAL.LIST = ''
        VALUE.TRADE = ''
        PERIOD.ST.DATE =TODAY - 1
        PERIOD.END.DATE =TODAY - 1
        CALL AC.GET.PERIOD.BALANCES(ACCT.ID,BAL.LIST,VALUE.TRADE,PERIOD.ST.DATE,PERIOD.END.DATE,SYSTEM.DATE,CHARGEOFF.TYPE,BAL.DETS,ERR.PROCESS)
    
        NO.OF.DT = DCOUNT(BAL.DETS<1>,VM)
        BD.BAL = BAL.DETS<4,NO.OF.DT>
        Y.WORKING.BAL = FMT(BD.BAL,"R2#20")
        
       
        Y.LINKED.APPL.ID = Y.ACCT.ID


    END

RETURN
*-------------------------------------------------------------------------
PROCESS:
*-------------------------------------------------------------------------
    Y.ARR.ID = ''
    Y.ARR.ID = Y.ARR

    CALL F.READ(FN.ARR,Y.ARR.ID,R.REC,F.ARR,ERR1)
    IF ERR1 EQ '' THEN
        Y.LINKED.APPL.ID = R.REC<AA.ARR.LINKED.APPL.ID>

        Y.COMPANY.CODE = R.REC<AA.ARR.CO.CODE>
        Y.START.DATE = R.REC<AA.ARR.START.DATE>
        Y.TOT.DATE = Y.START.DATE
        Y.START.DATE = OCONV(ICONV(Y.START.DATE,'D'),'D-E')
        

        Y.ORG.DATE = R.REC<AA.ARR.ORIG.CONTRACT.DATE>
        IF Y.ORG.DATE EQ '' THEN
            Y.ORG.DATE = Y.START.DATE
        END ELSE
            Y.ORG.DATE = OCONV(ICONV(Y.ORG.DATE,'D'),'D-E')
  
        END
        Y.CURRENCY = R.REC<AA.ARR.CURRENCY>
    END
    CUST1 = R.REC<AA.ARR.CUSTOMER,1>
    CUST2 = R.REC<AA.ARR.CUSTOMER,2>
    CUST3 = R.REC<AA.ARR.CUSTOMER,3>
    CUST4 = R.REC<AA.ARR.CUSTOMER,4>


    Y.ARR.ID = Y.ARR.ID

    PROPERTY.CLASS = 'CUSTOMER'

    CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,'','',RETURNID3,RETURNCONDS3,RETERR3)

    RETURNCONDS3 = RAISE(RETURNCONDS3)

    Y.ACTION = RETURNCONDS3<AA.CUS.ACTION>
    Y.CUST = RETURNCONDS3<AA.CUS.CUSTOMER,1>
    Y.ROLE = RETURNCONDS3<AA.CUS.CUSTOMER.ROLE,1>

    IF Y.ROLE EQ 'OWNER' THEN

        CALL F.READ(FN.CUSTOMER,CUST1,R.CUSTOMER,F.CUSTOMER,CUS.ERROR)

        Y.SHORT.NAME = R.CUSTOMER<EB.CUS.SHORT.NAME>
        Y.STREET = R.CUSTOMER<EB.CUS.STREET>
        Y.ADDRESS = R.CUSTOMER<EB.CUS.ADDRESS>
        Y.TOWN = R.CUSTOMER<EB.CUS.TOWN.COUNTRY>
        Y.POST.CODE = R.CUSTOMER<EB.CUS.POST.CODE>
        Y.COUNTRY = R.CUSTOMER<EB.CUS.COUNTRY>
        
        Y.CUSTOMER.ADDRESS = Y.STREET:' ':Y.ADDRESS:' ':Y.TOWN:' ':Y.POST.CODE:' ':Y.COUNTRY
        CUST2 = R.REC<AA.ARR.CUSTOMER,2>
        CUST3 = R.REC<AA.ARR.CUSTOMER,3>
        CUST4 = R.REC<AA.ARR.CUSTOMER,4>

        CALL F.READ(FN.CUSTOMER,CUST2,R.CUSTOMER,F.CUSTOMER,CUS.ERROR)

        Y.SHORT.NAME.CUST2 = R.CUSTOMER<EB.CUS.SHORT.NAME>
        CALL F.READ(FN.CUSTOMER,CUST3,R.CUSTOMER,F.CUSTOMER,CUS.ERROR)

        Y.SHORT.NAME.CUST3 = R.CUSTOMER<EB.CUS.SHORT.NAME>

        CALL F.READ(FN.CUSTOMER,CUST4,R.CUSTOMER,F.CUSTOMER,CUS.ERROR)

        Y.SHORT.NAME.CUST4 = R.CUSTOMER<EB.CUS.SHORT.NAME>

        CALL F.READ(FN.ACCOUNT,Y.LINKED.APPL.ID,R.REC.ACCOUNT,F.ACCOUNT,ACC.ERR)

        IF NOT(ACC.ERR) THEN
            Y.CATEGORY = R.REC.ACCOUNT<AC.CATEGORY>
            Y.LIMIT.REF=R.REC.ACCOUNT<AC.LIMIT.REF>
            CALL F.READ(FN.CATEGORY,Y.CATEGORY,R.CATEGORY,F.CATEGORY,ERROR.CATEG)
            IF NOT(ERROR.CATEG) THEN
                CATEG.DES = R.CATEGORY<EB.CAT.DESCRIPTION>
            END
            
        END

        GOSUB AA.ARR.ACCT.DETS


        Y.AA.PRODUCT.LINE = R.REC<AA.ARR.PRODUCT.LINE>
        Y.AA.PRODUCT.GRP = R.REC<AA.ARR.PRODUCT.GROUP>
        Y.AA.PRODUCT = R.REC<AA.ARR.PRODUCT>


        Y.ARR.ID = Y.ARR.ID

        PROPERTY.CLASS = 'SETTLEMENT'

        CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,'','',RETURNID1,RETURNCONDS1,RETERR1)

        RETURNCONDS1 = RAISE(RETURNCONDS1)

        Y.AA.PAYOUT.ACCT = RETURNCONDS1<AA.SET.PAYOUT.ACCOUNT>
        Y.PAY.IN.ACT=RETURNCONDS1< AA.SET.PAYIN.ACCOUNT>


        CALL F.READ(FN.AA.ACCOUNT.DETAILS,Y.ARR.ID,R.AA.ACCT.DETS,F.AA.ACCOUNT.DETAILS,AA.ACCT.DET.ERR)
        Y.LAST.DATE = R.AA.ACCT.DETS<AA.AD.LAST.RENEW.DATE>
        Y.LAST.DATE = OCONV(ICONV(Y.LAST.DATE,'D'),'D-E')
 

        Y.PAYMENT.DATE = R.AA.ACCT.DETS<AA.AD.PAYMENT.START.DATE>
        Y.PAYMENT.DATE = OCONV(ICONV(Y.PAYMENT.DATE,'D'),'D-E')

        Y.MATURITY.DATE = R.AA.ACCT.DETS<AA.AD.MATURITY.DATE>
        Y.MATURITY.DATE = OCONV(ICONV(Y.MATURITY.DATE,'D'),'D-E')
  

        Y.RENEWAL.DATE = R.AA.ACCT.DETS<AA.AD.RENEWAL.DATE>
        Y.RENEWAL.DATE = OCONV(ICONV(Y.RENEWAL.DATE,'D'),'D-E')

       
       

        Y.SUS.DATE = R.AA.ACCT.DETS<AA.AD.SUSP.DATE>
        Y.SUS.DATE = OCONV(ICONV(Y.SUS.DATE,'D'),'D-E')
     
        
        Y.LOAN.STATUS = R.AA.ACCT.DETS<AA.AD.AGING.STATUS>
        
        GOSUB GET.LIM.ID
        GOSUB GET.WORKING.BAL

        RETURN



***********
GET.LIM.ID:
***********

        PROPERTY.CLASS = 'LIMIT'

        CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,'','',RETURNID,RETURNCONDS2,RETURNERR)

        RETURNCONDS2 = RAISE(RETURNCONDS2)
        LIMIT.REF = RETURNCONDS2<AA.LIM.LIMIT.REFERENCE>
        LIMIT.SERIAL = RETURNCONDS2<AA.LIM.LIMIT.SERIAL>


        LIMIT.REF = FMT(LIMIT.REF,"R%7")


        LIM.ID = CUST1:'.':LIMIT.REF:'.':LIMIT.SERIAL

        CALL F.READ(FN.LIMIT,LIM.ID,R.LIM,F.LIMIT,ERR.LIM)
        IF ERR.LIM EQ '' THEN
            Y.COLL.RT = R.LIM<LI.COLLAT.RIGHT>
            Y.COLLATERAL.ID = Y.COLL.RT:'.1'
            CALL F.READ(FN.COLLATERAL,Y.COLLATERAL.ID,R.COLLATERAL,F.COLLATERAL,COLLATERAL.ERR)
            Y.INSURANCE = R.COLLATERAL<COLL.LOCAL.REF,Y.INS.COV.POS>
            Y.INS.START.DATE = R.COLLATERAL<COLL.LOCAL.REF,Y.INS.ST.POS>
            Y.INS.START.DATE = OCONV(ICONV(Y.INS.START.DATE,'D'),'D-E')
        

            Y.INS.EXP.DATE = R.COLLATERAL<COLL.LOCAL.REF,Y.INS.EXP.POS>
            Y.INS.EXP.DATE = OCONV(ICONV(Y.INS.EXP.DATE,'D'),'D-E')
       

            INT.LIM.AMT = R.LIM<LI.INTERNAL.AMOUNT>
            INT.LIM.AMT = FMT(INT.LIM.AMT,"R2#20")
            Y.EXCESS.AMY=R.LIM<LI.AMT.LAST.EXCESS>

            LIM.EXP.DATE = R.LIM<LI.EXPIRY.DATE>
            LIM.EXP.DATE = OCONV(ICONV(LIM.EXP.DATE,'D'),'D-E')
      

            Y.REDUCING.LIMIT = R.LIM<LI.REDUCING.LIMIT>

            IF Y.REDUCING.LIMIT EQ 'Y' THEN
                Y.REVOLVING = 'NON_REVOLVING'
            END ELSE
                Y.REVOLVING = 'REVOLVING'
            END
            

   
            LIAB.NO = ''
            CALL GET.ACCOUNT.LIMIT.AMTS(LIAB.NO,CUST1,LIMIT.REF,Y.CURRENCY,ALLOCATED,AVAILABLE)
            IF AVAILABLE GE '0' THEN
                Y.UNUTIL.LIMIT.BAL = AVAILABLE
            END
            Y.ID.UNUT = Y.ARR.ID:'-':TODAY[5,2]:'-':TODAY[1,4]
           * CALL F.READ(FN.MOB.AA.AR.UNUT.OD.INT.ACR,Y.ID.UNUT,R.MOB.AA.AR.UNUT.OD.INT.ACR,F.MOB.AA.AR.UNUT.OD.INT.ACR,MOB.AA.AR.UNUT.OD.ERR)

            *IF NOT(MOB.AA.AR.UNUT.OD.ERR) THEN
             *   NO.OF.COUNT = DCOUNT(R.MOB.AA.AR.UNUT.OD.INT.ACR<MOB.L.INTL.OD.INT.ACCRUAL.AMT>,VM)
              *  Y.UNUT.LIM.INTEREST = R.MOB.AA.AR.UNUT.OD.INT.ACR<MOB.L.INTL.OD.INT.ACCRUAL.AMT,NO.OF.COUNT>

            *END

            Y.LAST.WRK.DATE = Y.LAST.WRK.DATE.1
            START.DATE = Y.LAST.WRK.DATE
            END.DATE = TODAY
            REQUEST.TYPE<3> = 'ALL'
            Y.BALANCE = ''
            Y.BALANCE.AMT = ''
            Y.BALANCE.ARRAY = ''
            Y.BAL.TYPE = 'TOTCOMMITMENT'
            CALL AA.GET.PERIOD.BALANCES(Y.LINKED.APPL.ID,Y.BAL.TYPE,REQUEST.TYPE,START.DATE,END.DATE,SYSTEM.DATE,BAL.DETAILS,ERROR.MESSAGE)


            Y.LAST.WRK.DATE = R.DATES<EB.DAT.LAST.WORKING.DAY>
            Y.LAST.WRK.DATE = OCONV(ICONV(Y.LAST.WRK.DATE,'D'),'D-E')
        

            NO.OF.CNT.TODAY = DCOUNT(BAL.DETAILS<1>,VM)
            NO.OF.CNT.YEST = NO.OF.CNT.TODAY - 1
            Y.LIM.YEST.BAL = BAL.DETAILS<4,NO.OF.CNT.YEST>
            Y.LIM.TODAY.BAL = BAL.DETAILS<4,NO.OF.CNT.TODAY>

            Y.LOAN.COMMIT.AMT = Y.LIM.YEST.BAL - Y.LIM.TODAY.BAL
            Y.LOAN.COMMIT.AMT = FMT(Y.LOAN.COMMIT.AMT,"R2#20")

            IF Y.LOAN.COMMIT.AMT GE '0' THEN
                Y.LOAN.COMMIT.STATUS = 'INCREASED'
            END ELSE
                Y.LOAN.COMMIT.STATUS = 'DECREASED'
            END


        END
        RETURN

*****************
AA.ARR.ACCT.DETS:
*****************

        Y.ARR.ID = Y.ARR.ID

        PROPERTY.CLASS = 'ACCOUNT'

        CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,'','',RETURNID12,RETURNCONDS12,RETERR1)

        RETURNCONDS12 = RAISE(RETURNCONDS12)

        Y.ALT.ID = RETURNCONDS12<AA.AC.ALT.ID>
        CONVERT VM TO '' IN Y.ALT.ID

        RETURN



*****************
GET.WORKING.BAL:
****************

        BEGIN CASE
**************************************
            CASE Y.AA.PRODUCT.LINE EQ 'ACCOUNTS'
**************************************
                DATE.END = TODAY - 1
                START.DATE = DATE.END
                END.DATE = DATE.END
                REQUEST.TYPE<3> = 'ALL'
                Y.BALANCE = ''
                Y.BALANCE.AMT = ''
                Y.BALANCE.ARRAY = ''
                Y.BAL.TYPE = 'CURBALANCE'
                CALL AA.GET.PERIOD.BALANCES(Y.LINKED.APPL.ID,Y.BAL.TYPE,REQUEST.TYPE,START.DATE,END.DATE,SYSTEM.DATE,BAL.DETAILS,ERROR.MESSAGE)
            
                Y.WORKING.BAL = BAL.DETAILS<4,1>

                Y.WORKING.BAL = FMT(Y.WORKING.BAL,"R2#20")
         
         



                START.DATE = TODAY-1
                END.DATE = TODAY-1
                REQUEST.TYPE<4> = 'ECB'
                REQUEST.TYPE<4,2> = 'END'
                Y.BALANCE = ''
                Y.BALANCE.AMT = ''
                Y.BALANCE.ARRAY = ''
                BALANCE.TYPE = 'ACCCRINTEREST':FM:'ACCDRINTEREST':FM:'ACCDEPOSITINT':FM:'ACCPRINCIPALINT':FM:'ACCPENALTYINT':FM:'DELACCOUNT':FM:'DUEACCOUNT':FM:'NABACCOUNT':FM:'GRCACCOUNT':FM:'UNCACCOUNT':FM:'UNDACCOUNT':FM:'STDACCOUNT':FM:'SSTACCOUNT':FM:'DBTACCOUNT':FM:'WATACCOUNT':FM:'LSSACCOUNT':FM:'STDPRINICIPALINT':FM:'SSTPRINICIPALINT':FM:'DBTPRINICIPALINT':FM:'WATPRINICIPALINT':FM:'LSSPRINICIPALINT'
                Y.BAL.CNT = DCOUNT(BALANCE.TYPE,FM)

                LOOP
                    REMOVE Y.BAL.TYPE FROM BALANCE.TYPE SETTING BAL.POS
                WHILE Y.BAL.TYPE:Y.BAL.POS

                    CALL AA.GET.PERIOD.BALANCES(Y.LINKED.APPL.ID,Y.BAL.TYPE,REQUEST.TYPE,START.DATE,END.DATE,SYSTEM.DATE,BAL.DETAILS,ERROR.MESSAGE)

                    NO.OF.DT = DCOUNT(BAL.DETAILS<1>,VM)
                    BD.BAL = BAL.DETAILS<4,NO.OF.DT>

                    Y.BALANCE.AMT = BAL.DETAILS<4,1>

                    IF Y.BALANCE.AMT EQ '' THEN
                        Y.BALANCE.AMT = 0
                    END ELSE
                        Y.BALANCE.AMT = FMT(Y.BALANCE.AMT,"R2#20")
                    END
                    Y.BALANCE.ARRAY<-1> = Y.BALANCE.AMT
                    Y.BALANCE.AMT = ''
                REPEAT
                   
                CHANGE FM TO ';' IN Y.BALANCE.ARRAY

                Y.ARR.ID = Y.ARR.ID
                PROPERTY.CLASS = 'INTEREST'
                PROPERTY = 'CRINTEREST'
                CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,PROPERTY,'',RETURNID4,RETURNCONDS4,RETERR4)

                RETURNCONDS4 = RAISE(RETURNCONDS4)

                AC.CR.INT.RATE = RETURNCONDS4<AA.INT.EFFECTIVE.RATE>
                CHANGE VM TO '|' IN AC.CR.INT.RATE

                Y.ARR.ID = Y.ARR.ID
                PROPERTY.CLASS = 'INTEREST'
                PROPERTY = 'DRINTEREST'
                CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,PROPERTY,'',RETURNID5,RETURNCONDS5,RETERR5)

                RETURNCONDS5 = RAISE(RETURNCONDS5)

                AC.DR.INT.RATE = RETURNCONDS5<AA.INT.EFFECTIVE.RATE>
                CHANGE VM TO '|' IN AC.DR.INT.RATE

****************************************
            CASE Y.AA.PRODUCT.LINE EQ 'DEPOSITS'
****************************************

                CURRENT.DAY = TODAY-1
                ACCOUNT.ID = Y.LINKED.APPL.ID
                BALANCE.TYPE = 'CURACCOUNT' ; RET.ERR = ''
                CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,BALANCE.TYPE,CURRENT.DAY,Y.WORKING.BAL,RET.ERR)
       

                Y.WORKING.BAL = FMT(Y.WORKING.BAL,"R2#20")






                Y.MATURITY.DATE =Y.RENEWAL.DATE
                REQUEST.DATE =TODAY
                Y.BALANCE = ''
                Y.BALANCE.AMT = ''
                Y.BALANCE.ARRAY = ''
                BALANCE.TYPE = 'ACCCRINTEREST':FM:'ACCDRINTEREST':FM:'ACCDEPOSITINT':FM:'ACCPRINCIPALINT':FM:'ACCPENALTYINT':FM:'DELACCOUNT':FM:'DUEACCOUNT':FM:'NABACCOUNT':FM:'GRCACCOUNT':FM:'UNCACCOUNT':FM:'UNDACCOUNT':FM:'STDACCOUNT':FM:'SSTACCOUNT':FM:'DBTACCOUNT':FM:'WATACCOUNT':FM:'LSSACCOUNT':FM:'STDPRINICIPALINT':FM:'SSTPRINICIPALINT':FM:'DBTPRINICIPALINT':FM:'WATPRINICIPALINT':FM:'LSSPRINICIPALINT'
                LOOP
                    REMOVE Y.BAL.TYPE FROM BALANCE.TYPE SETTING BAL.POS
                WHILE Y.BAL.TYPE:Y.BAL.POS

                    CALL AA.GET.ECB.BALANCE.AMOUNT(Y.LINKED.APPL.ID,Y.BAL.TYPE,REQUEST.DATE,Y.BALANCE.AMT,RET.ERROR)

                    IF Y.BALANCE.AMT EQ '' THEN
                        Y.BALANCE.AMT = 0
                    END ELSE
                        Y.BALANCE.AMT = FMT(Y.BALANCE.AMT,"R2#20")
                    END

                    Y.BALANCE.ARRAY<-1> = Y.BALANCE.AMT
                    Y.BALANCE.AMT = ''
                REPEAT
                CHANGE FM TO ';' IN Y.BALANCE.ARRAY

                Y.ARR.ID = Y.ARR.ID

                PROPERTY.CLASS = 'INTEREST'
                PROPERTY = 'DEPOSITINT'

                CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,PROPERTY,'',RETURNID6,RETURNCONDS6,RETERR6)

                RETURNCONDS6 = RAISE(RETURNCONDS6)

                D.DEP.INT.RATE = RETURNCONDS6<AA.INT.EFFECTIVE.RATE>
                CHANGE VM TO '|' IN D.DEP.INT.RATE

*GOSUB LIMIT.DATA

*******************************************
            CASE Y.AA.PRODUCT.LINE EQ 'LENDING'
*******************************************

                CURRENT.DAY = TODAY-1
                ACCOUNT.ID = Y.LINKED.APPL.ID
            
               

                BALANCE.TYPE = 'CURACCOUNT' ; RET.ERR = ''
                CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,BALANCE.TYPE,CURRENT.DAY,Y.CURACCOUNT.AMT,RET.ERR)
                Y.LOAN.CURR.BAL = FMT(Y.CURACCOUNT.AMT,"R2#20")

                Y.WORKING.BAL = FMT(Y.CURACCOUNT.AMT,"R2#20")

                BALANCE.TYPE = 'ACCPRINCIPALINT' ; RETURN.ERR = ''
                CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,BALANCE.TYPE,CURRENT.DAY,Y.ACCPRINCIPALINT.AMT,RETURN.ERR)

                BALANCE.TYPE = 'ACCPENALTYINT' ; RET.ERR = ''
                CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,BALANCE.TYPE,CURRENT.DAY,Y.ACCPENALTYINT.AMT,RET.ERR)
                Y.ACCRUED.INT = Y.ACCPRINCIPALINT.AMT + Y.ACCPENALTYINT.AMT
                Y.ACCRUED.INT = FMT(Y.ACCRUED.INT,"R2#20")


                BALANCE.TYPE = 'TOTOVERDUE' ; RETURN.ERR = ''
                CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,BALANCE.TYPE,CURRENT.DAY,Y.TOTOVERDUE.AMT,RETURN.ERR)
                Y.OUTSTANDING.OVRDUE.AMT = Y.TOTOVERDUE.AMT
                Y.OUTSTANDING.OVRDUE.AMT = FMT(Y.OUTSTANDING.OVRDUE.AMT,"R2#20")
    
                BALANCE.TYPE = 'TOTCOMMITMENT' ; RET.ERR = ''
                CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,BALANCE.TYPE,Y.TOT.DATE,Y.TOTCOMMITMENT.AMT,RET.ERR)
             
                IF (Y.TOTCOMMITMENT.AMT EQ '') OR (Y.TOTCOMMITMENT.AMT EQ '0') THEN
                    Y.AA.ARR.TERM.AMT.ID = Y.ARR.ID:'-COMMITMENT-':Y.TOT.DATE:'.1'
                    CALL F.READ(FN.AA.ARR.TERM.AMT,Y.AA.ARR.TERM.AMT.ID,R.AA.ARR.TRM.AMT.REC,F.AA.ARR.TERM.AMT,ERR.AA.TERM.AMOUNT)
                    Y.TOTCOMMITMENT.AMT =  R.AA.ARR.TRM.AMT.REC<AA.AMT.AMOUNT>
                END
 
                BALANCE.TYPE = 'TOTCOMMITMENT' ; RET.ERR = ''
                CALL AA.GET.ECB.BALANCE.AMOUNT(ACCOUNT.ID,BALANCE.TYPE,TODAY,Y.TOTCOMMITMENT.AMT.TODAY,RET.ERR)

        
                IF (Y.TOTCOMMITMENT.AMT.TODAY EQ '') OR (Y.TOTCOMMITMENT.AMT.TODAY EQ '0') THEN
                    Y.AA.ARR.TERM.AMT.ID = Y.ARR.ID:'-COMMITMENT-':TODAY:'.1'
                    CALL F.READ(FN.AA.ARR.TERM.AMT,Y.AA.ARR.TERM.AMT.ID,R.AA.ARR.TRM.AMT.REC.TODAY,F.AA.ARR.TERM.AMT,ERR.AA.TERM.AMOUNT)
                    Y.TOTCOMMITMENT.AMT.TODAY =  R.AA.ARR.TRM.AMT.REC.TODAY<AA.AMT.AMOUNT>
                END
                IF (Y.TOTCOMMITMENT.AMT.TODAY NE '') OR (Y.TOTCOMMITMENT.AMT.TODAY EQ '0') THEN

                    Y.TOTCOMMIT.AMT = Y.TOTCOMMITMENT.AMT.TODAY
                END ELSE
                    Y.TOTCOMMIT.AMT = Y.TOTCOMMITMENT.AMT
                END
                Y.TOTCOMMIT.AMT = FMT(Y.TOTCOMMIT.AMT,"R2#20")


                REQUEST.DATE = TODAY-1
                Y.BALANCE = ''
                Y.BALANCE.AMT = ''
                Y.BALANCE.ARRAY = ''
                BALANCE.TYPE = 'ACCCRINTEREST':FM:'ACCDRINTEREST':FM:'ACCDEPOSITINT':FM:'ACCPRINCIPALINT':FM:'ACCPENALTYINT':FM:'DELACCOUNT':FM:'DUEACCOUNT':FM:'NABACCOUNT':FM:'GRCACCOUNT':FM:'UNCACCOUNT':FM:'UNDACCOUNT':FM:'STDACCOUNT':FM:'SSTACCOUNT':FM:'DBTACCOUNT':FM:'WATACCOUNT':FM:'LSSACCOUNT':FM:'STDPRINICIPALINT':FM:'SSTPRINICIPALINT':FM:'DBTPRINICIPALINT':FM:'WATPRINICIPALINT':FM:'LSSPRINICIPALINT'
                LOOP
                    REMOVE Y.BAL.TYPE FROM BALANCE.TYPE SETTING Y.BAL.POS
                WHILE Y.BAL.TYPE:Y.BAL.POS

                    CALL AA.GET.ECB.BALANCE.AMOUNT(Y.LINKED.APPL.ID,Y.BAL.TYPE,REQUEST.DATE,Y.BALANCE.AMT,RET.ERROR)

                    IF Y.BALANCE.AMT EQ '' THEN
                        Y.BALANCE.AMT = 0
                    END ELSE
                        Y.BALANCE.AMT = FMT(Y.BALANCE.AMT,"R2#20")
                    END

                    Y.BALANCE.ARRAY<-1> = Y.BALANCE.AMT
                    Y.BALANCE.AMT = ''

                REPEAT
                CHANGE FM TO ';' IN Y.BALANCE.ARRAY

                Y.ARR.ID = Y.ARR.ID
                PROPERTY.CLASS = 'INTEREST'
                PROPERTY = 'PRINCIPALINT'
                CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,PROPERTY,'',RETURNID7,RETURNCONDS7,RETERR7)

                RETURNCONDS7 = RAISE(RETURNCONDS7)

                L.PR.INT.RATE = RETURNCONDS7<AA.INT.EFFECTIVE.RATE>
                CHANGE VM TO '|' IN L.PR.INT.RATE


                Y.ARR.ID = Y.ARR.ID
                PROPERTY.CLASS = 'INTEREST'
                PROPERTY = 'PENALTYINT'
                CALL AA.GET.ARRANGEMENT.CONDITIONS(Y.ARR.ID,PROPERTY.CLASS,PROPERTY,'',RETURNID8,RETURNCONDS8,RETERR8)

                RETURNCONDS8 = RAISE(RETURNCONDS8)

                L.PEN.INT.RATE = RETURNCONDS8<AA.INT.EFFECTIVE.RATE,1>
                CHANGE VM TO '|' IN L.PEN.INT.RATE

           

        END CASE

        RETURN
LIMIT.DATA:

        Y.REF.LIMIT.ID = FIELD(Y.LIMIT.REF,".",1)
        Y.LEN.LIMIT.REF = LEN(Y.REF.LIMIT.ID)

        IF Y.LEN.LIMIT.REF EQ 3 THEN

            Y.LIMIT.ID = CUST1:".0000":Y.LIMIT.REF
        END

        IF Y.LEN.LIMIT.REF EQ 4 THEN
            Y.LIMIT.ID = CUST1:".000":Y.LIMIT.REF
        END

        CALL F.READ(FN.LIMIT,Y.LIMIT.ID,LIMIT.REC,F.LIMIT,LIMIT.ERR)
        IF LIMIT.REC THEN
            Y.EXCESS.AMOUNT = LIMIT.REC<LI.AMT.LAST.EXCESS>
*  Y.PRAPOSAL.DATE=LIMIT.REC<LI.PROPOSAL.DATE>

        END
        ELSE
            CALL EB.READ.HISTORY.REC(F.LIMIT.HIS, Y.LIMIT.ID, HIST.REC, YERROR)
            Y.EXCESS.AMOUNT = HIST.REC<LI.AMT.LAST.EXCESS>
*Y.PRAPOSAL.DATE=HIST.REC<LI.PROPOSAL.DATE>
        END

        RETURN

*************************************************************************************************************
    END
*************************************************************************************************************
